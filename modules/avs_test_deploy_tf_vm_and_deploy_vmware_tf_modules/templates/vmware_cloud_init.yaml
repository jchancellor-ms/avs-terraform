#cloud-config
write_files:
- content: |
    #define the providers, configure backend state, and configure managed identity to access state
    terraform {
        required_providers {
            nsxt = {
                source = "vmware/nsxt"
            }
            vsphere = {
                source = "hashicorp/vsphere"
            }
            azurerm = {
                source  = "hashicorp/azurerm"
                version = "~>3.00"
            }

        }

        backend "azurerm" {
            resource_group_name  = "${vmware_state_storage.resource_group_name}"
            storage_account_name = "${vmware_state_storage.account_name}"
            container_name       = "${vmware_state_storage.container_name}"
            key                  = "${vmware_state_storage.key_name}"

            use_msi          = true
            subscription_id  = "${vmware_state_storage.subscription_id}"
            tenant_id        = "${vmware_state_storage.tenant_id}"
            client_id        = "${vmware_state_storage.client_id}"
        }
    }

    provider "azurerm" {
        features {}
    }

    module "deploy_vmware_vms_and_networks" {
        source = "${tf_template_github_source}"

        vmware_deployment = ${vmware_deployment}
        vmware_creds      = ${vmware_creds}
    }
  path: /tmp/terraform/main.tf
runcmd:
  - [ sudo, snap, install, terraform, --classic ]
  - [ cd, /tmp/terraform ]
  - [ terraform, init ]
  - [ terraform, apply, -auto-approve ]
#consider adding the MSI details in the runcmd if implementing Azure resources from this VM